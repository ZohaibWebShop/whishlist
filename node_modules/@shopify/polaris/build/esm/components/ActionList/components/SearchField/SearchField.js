import { CircleCancelMinor, SearchMinor } from '@shopify/polaris-icons';
import React, { useRef, useId, useCallback } from 'react';
import styles from './SearchField.scss.js';
import { useI18n } from '../../../../utilities/i18n/hooks.js';
import { Icon } from '../../../Icon/Icon.js';
import { Text } from '../../../Text/Text.js';

function SearchField({
  value,
  placeholder,
  onChange
}) {
  const i18n = useI18n();
  const input = useRef(null);
  const searchId = useId();
  const handleChange = useCallback(({
    currentTarget
  }) => {
    onChange(currentTarget.value);
  }, [onChange]);
  const handleClear = useCallback(() => {
    if (!input.current) {
      return;
    }
    input.current.value = '';
    onChange('');
    input.current.focus();
  }, [onChange]);
  const clearMarkup = value !== '' && /*#__PURE__*/React.createElement("button", {
    type: "button",
    "aria-label": i18n.translate('Polaris.ActionList.SearchField.clearButtonLabel'),
    className: styles.Clear,
    onClick: handleClear,
    onBlur: () => {
      handleClear();
    }
  }, /*#__PURE__*/React.createElement(Icon, {
    source: CircleCancelMinor
  }));
  const handleRef = ref => {
    input.current = ref;

    // It won't focus if it's on the same tick as when it renders
    setTimeout(() => {
      ref?.focus();
    });
  };
  return /*#__PURE__*/React.createElement("div", {
    className: styles.SearchField
  }, /*#__PURE__*/React.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: searchId
  }, i18n.translate('Polaris.ActionList.SearchField.search'))), /*#__PURE__*/React.createElement("input", {
    id: searchId,
    className: styles.Input,
    placeholder: placeholder,
    type: "search",
    autoCapitalize: "off",
    autoComplete: "off",
    autoCorrect: "off",
    ref: handleRef,
    value: value,
    onChange: handleChange,
    onKeyDown: preventDefault
  }), /*#__PURE__*/React.createElement("span", {
    className: styles.Icon
  }, /*#__PURE__*/React.createElement(Icon, {
    source: SearchMinor
  })), clearMarkup, /*#__PURE__*/React.createElement("div", {
    className: styles.Backdrop
  }));
}
function preventDefault(event) {
  if (event.key === 'Enter') {
    event.preventDefault();
  }
}

export { SearchField };

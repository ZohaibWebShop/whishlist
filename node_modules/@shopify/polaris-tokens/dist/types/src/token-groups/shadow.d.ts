import type { MetadataProperties, Experimental } from '../types';
type ShadowAliasExperimental = Experimental<'bevel' | 'card-sm' | 'card-md' | 'card-lg' | 'button' | 'button-hover' | 'button-disabled' | 'button-primary-strong-inset' | 'button-primary-strong-hover' | 'button-primary-strong' | 'button-primary' | 'button-primary-hover' | 'button-inset' | 'border-inset'>;
export type ShadowAlias = 'inset-lg' | 'inset-md' | 'inset-sm' | 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | ShadowAliasExperimental;
export type ShadowTokenName = `shadow-${ShadowAlias}`;
export type ShadowTokenGroup = {
    [TokenName in ShadowTokenName]: string;
};
export declare const shadow: {
    [TokenName in ShadowTokenName]: MetadataProperties;
};
export {};
//# sourceMappingURL=shadow.d.ts.map